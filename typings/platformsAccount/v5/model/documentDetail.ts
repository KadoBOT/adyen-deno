/**
 * Adyen for Platforms: Account API
 * The Account API provides endpoints for managing account-related entities on your platform. These related entities include account holders, accounts, bank accounts, shareholders, and KYC-related documents. The management operations include actions such as creation, retrieval, updating, and deletion of them.  For more information, refer to our [documentation](https://docs.adyen.com/marketpay). ## Authentication To connect to the Account API, you must use basic authentication credentials of your web service user. If you don\'t have one, please contact the [Adyen Support Team](https://support.adyen.com/hc/en-us/requests/new). Then use its credentials to authenticate your request, for example:  ``` curl -U \"ws@MarketPlace.YourMarketPlace\":\"YourWsPassword\" \\ -H \"Content-Type: application/json\" \\ ... ``` Note that when going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning The Account API supports versioning of its endpoints through a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://cal-test.adyen.com/cal/services/Account/v5/createAccountHolder ```
 *
 * The version of the OpenAPI document: 5
 * Contact: support@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

 

export class DocumentDetail {
    /**
    * The code of account holder, to which the document applies.
    */
    'accountHolderCode': string;
    /**
    * The unique ID of the Bank Account to which the document applies. >Required if the documentType is `BANK_STATEMENT` (i.e., a document is being submitted in order to verify a bank account).  >Refer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on when a document should be submitted in order to verify a bank account.
    */
    'bankAccountUUID'?: string;
    /**
    * Description of the document.
    */
    'description'?: string;
    /**
    * The type of a document. Permitted values: * `BANK_STATEMENT` denotes an image containing a bank statement or other document proving ownership of a specific bank account. * `PASSPORT` denotes an image containing the identity page(s) of a passport. * `ID_CARD_FRONT` denotes an image containing only the front of the ID card. In order for a document to be usable, both the `ID_CARD_FRONT` and `ID_CARD_BACK` must be submitted. * `ID_CARD_BACK` denotes an image containing only the back of the ID card. In order for a document to be usable, both the `ID_CARD_FRONT` and `ID_CARD_BACK` must be submitted. * `DRIVING_LICENCE_FRONT` denotes an image containing only the front of the driving licence. In order for a document to be usable, both the `DRIVING_LICENCE_FRONT` and `DRIVING_LICENCE_BACK` must be submitted. * `DRIVING_LICENCE_BACK` denotes an image containing only the back of the driving licence. In order for a document to be usable, both the `DRIVING_LICENCE_FRONT` and `DRIVING_LICENCE_FRONT` must be submitted.  >Please refer to [Verification checks](https://docs.adyen.com/marketpay/onboarding-and-verification/verification-checks) for details on when each document type should be submitted.
    */
    'documentType': DocumentDetail.DocumentTypeEnum;
    /**
    * Filename of the document.
    */
    'filename': string;
    /**
    * The code of the shareholder, to which the document applies. >Required if the account holder referred to by the `accountHolderCode` has a `legalEntity` of type `Business` and the `documentType` is either `PASSPORT`, `ID_CARD_FRONT`, `ID_CARD_BACK`, `DRIVING_LICENCE_FRONT`, `DRIVING_LICENCE_BACK` (i.e. a document is being submitted in order to verify a shareholder).  >Refer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on when a document should be submitted in order to verify a shareholder.
    */
    'shareholderCode'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "accountHolderCode",
            "baseName": "accountHolderCode",
            "type": "string"
        },
        {
            "name": "bankAccountUUID",
            "baseName": "bankAccountUUID",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "documentType",
            "baseName": "documentType",
            "type": "DocumentDetail.DocumentTypeEnum"
        },
        {
            "name": "filename",
            "baseName": "filename",
            "type": "string"
        },
        {
            "name": "shareholderCode",
            "baseName": "shareholderCode",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return DocumentDetail.attributeTypeMap;
    }
}

export namespace DocumentDetail {
    export enum DocumentTypeEnum {
        BANKSTATEMENT = <any> 'BANK_STATEMENT',
        BSN = <any> 'BSN',
        COMPANYREGISTRATIONSCREENING = <any> 'COMPANY_REGISTRATION_SCREENING',
        DRIVINGLICENCE = <any> 'DRIVING_LICENCE',
        DRIVINGLICENCEBACK = <any> 'DRIVING_LICENCE_BACK',
        DRIVINGLICENCEFRONT = <any> 'DRIVING_LICENCE_FRONT',
        IDCARD = <any> 'ID_CARD',
        IDCARDBACK = <any> 'ID_CARD_BACK',
        IDCARDFRONT = <any> 'ID_CARD_FRONT',
        PASSPORT = <any> 'PASSPORT',
        SSN = <any> 'SSN',
        SUPPORTINGDOCUMENTS = <any> 'SUPPORTING_DOCUMENTS'
    }
}
