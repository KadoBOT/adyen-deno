/**
 * Adyen for Platforms: Account API
 * The Account API provides endpoints for managing account-related entities on your platform. These related entities include account holders, accounts, bank accounts, shareholders, and KYC-related documents. The management operations include actions such as creation, retrieval, updating, and deletion of them.  For more information, refer to our [documentation](https://docs.adyen.com/marketpay). ## Authentication To connect to the Account API, you must use basic authentication credentials of your web service user. If you don\'t have one, please contact the [Adyen Support Team](https://support.adyen.com/hc/en-us/requests/new). Then use its credentials to authenticate your request, for example:  ``` curl -U \"ws@MarketPlace.YourMarketPlace\":\"YourWsPassword\" \\ -H \"Content-Type: application/json\" \\ ... ``` Note that when going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning The Account API supports versioning of its endpoints through a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://cal-test.adyen.com/cal/services/Account/v5/createAccountHolder ```
 *
 * The version of the OpenAPI document: 5
 * Contact: support@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

 
 import { KYCCheckSummary } from './kYCCheckSummary.ts';

export class KYCCheckStatusData {
    /**
    * A list of the fields required for execution of the check.
    */
    'requiredFields': Array<string>;
    /**
    * The status of the check. >Permitted Values: `DATA_PROVIDED`, `PASSED`, `PENDING`, `AWAITING_DATA`, `RETRY_LIMIT_REACHED`, `INVALID_DATA`, `FAILED`.
    */
    'status': KYCCheckStatusData.StatusEnum;
    'summary': KYCCheckSummary;
    /**
    * The type of check. >Permitted Values: `COMPANY_VERIFICATION`, `IDENTITY_VERIFICATION`, `PASSPORT_VERIFICATION`, `BANK_ACCOUNT_VERIFICATION`, `NONPROFIT_VERIFICATION`, `CARD_VERIFICATION`.
    */
    'type': KYCCheckStatusData.TypeEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "requiredFields",
            "baseName": "requiredFields",
            "type": "Array<string>"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "KYCCheckStatusData.StatusEnum"
        },
        {
            "name": "summary",
            "baseName": "summary",
            "type": "KYCCheckSummary"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "KYCCheckStatusData.TypeEnum"
        }    ];

    static getAttributeTypeMap() {
        return KYCCheckStatusData.attributeTypeMap;
    }
}

export namespace KYCCheckStatusData {
    export enum StatusEnum {
        AWAITINGDATA = <any> 'AWAITING_DATA',
        DATAPROVIDED = <any> 'DATA_PROVIDED',
        FAILED = <any> 'FAILED',
        INVALIDDATA = <any> 'INVALID_DATA',
        PASSED = <any> 'PASSED',
        PENDING = <any> 'PENDING',
        PENDINGREVIEW = <any> 'PENDING_REVIEW',
        RETRYLIMITREACHED = <any> 'RETRY_LIMIT_REACHED',
        UNCHECKED = <any> 'UNCHECKED'
    }
    export enum TypeEnum {
        BANKACCOUNTVERIFICATION = <any> 'BANK_ACCOUNT_VERIFICATION',
        CARDVERIFICATION = <any> 'CARD_VERIFICATION',
        COMPANYVERIFICATION = <any> 'COMPANY_VERIFICATION',
        IDENTITYVERIFICATION = <any> 'IDENTITY_VERIFICATION',
        NONPROFITVERIFICATION = <any> 'NONPROFIT_VERIFICATION',
        PASSPORTVERIFICATION = <any> 'PASSPORT_VERIFICATION',
        PAYOUTMETHODVERIFICATION = <any> 'PAYOUT_METHOD_VERIFICATION'
    }
}
