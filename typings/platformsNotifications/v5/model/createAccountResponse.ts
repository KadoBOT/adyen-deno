/**
 * Adyen for Platforms: Notifications
 * The Notification API sends notifications to the endpoints specified in a given subscription. Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.  For more information, refer to our [documentation](https://docs.adyen.com/marketpay/marketpay-notifications).
 *
 * The version of the OpenAPI document: 5
 * Contact: support@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

 
 import { ErrorFieldType } from './errorFieldType.ts';
 import { PayoutScheduleResponse } from './payoutScheduleResponse.ts';

export class CreateAccountResponse {
    /**
    * The code of the new account.
    */
    'accountCode': string;
    /**
    * The code of the account holder.
    */
    'accountHolderCode': string;
    /**
    * The description of the account.
    */
    'description'?: string;
    /**
    * A list of fields that caused the `/createAccount` request to fail.
    */
    'invalidFields'?: Array<ErrorFieldType>;
    'metadata'?: { [key: string]: string; };
    'payoutSchedule'?: PayoutScheduleResponse;
    /**
    * The reference of a request.  Can be used to uniquely identify the request.
    */
    'pspReference': string;
    /**
    * The result code.
    */
    'resultCode'?: string;
    /**
    * The status of the account. >Permitted values: `Active`.
    */
    'status': CreateAccountResponse.StatusEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "accountCode",
            "baseName": "accountCode",
            "type": "string"
        },
        {
            "name": "accountHolderCode",
            "baseName": "accountHolderCode",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "invalidFields",
            "baseName": "invalidFields",
            "type": "Array<ErrorFieldType>"
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "payoutSchedule",
            "baseName": "payoutSchedule",
            "type": "PayoutScheduleResponse"
        },
        {
            "name": "pspReference",
            "baseName": "pspReference",
            "type": "string"
        },
        {
            "name": "resultCode",
            "baseName": "resultCode",
            "type": "string"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "CreateAccountResponse.StatusEnum"
        }    ];

    static getAttributeTypeMap() {
        return CreateAccountResponse.attributeTypeMap;
    }
}

export namespace CreateAccountResponse {
    export enum StatusEnum {
        Active = <any> 'Active',
        Closed = <any> 'Closed',
        Inactive = <any> 'Inactive',
        Suspended = <any> 'Suspended'
    }
}
